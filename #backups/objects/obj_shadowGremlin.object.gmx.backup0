// 2020-10-16 21:09:00
#event create|Initialize the Gremlin
canActiveRegion = true;
scale = 1;

canHurt = true;
hp = 12;
image_speed = 15/60;
state = WANDER;
stunned = false;

vsp = 0;
atkBox = 32; //divided by 2 on calculation.
damage = 8; //Attack damage.

hurtAlarm = 1;
friction = DEF_FRIC;

target = obj_pie; //objective priority.

objective = target;
stateLockAlarm = 2;
aggroRange = 16*8; //8 tiles
hAccel = 0;
vAccel = 0;
maxAccel = 3;
accelRate = 0.1;

stateLock = true;
alarm[stateLockAlarm] = 20;

image_xscale = sign(target.x-x);
point_direction(x,y,target.x,target.y);

event_inherited();
knockType = "FLY";
knock_resistance = 0.05;

#event destroy
var c = irandom(100);

if c <= 10 then scr_dropItem(ITEMID.item_gremEssence,1,0,x,y-4,noone); //~10% chance
if worldControl.special_raidID == "SR_Shadow" && c >= 99 
{
    scr_dropItem(ITEMID.weapon_subLimeMachineGun,0,ITEMTYPE.weapon ,x,y-4,noone); //~1% chance
    scr_playSound(obj_player.localEmitter,snd_rareItem,false,8,x,y);
}

event_inherited();

#event alarm1|Reset hurt
canHurt = true;
target = obj_player;
state = MOVE;
hAccel = 0;
vAccel = 0;

#event alarm2|Reset state lock
stateLock = false;

objective = target;
state = MOVE;

#event step
if canHurt == false then state = IDLE;
var canSeeTarget = !collision_line(x,y,target.x,target.y,OBSTA,false,false);

//Shadow Gremlin Ai

if stateLock == false
{    
    //Aggro range
    if target != obj_player
    {
        if distance_to_object(obj_player) <= aggroRange && obj_player.dead == false
        {
            target = obj_player;
        } else { target = obj_pie; }
    } else if obj_player.dead == true then { target = obj_pie; }
}

objective = target;

if instance_exists(objective) 
{ ai_shadowGremlin(state,spr_gremlinIdle,spr_gremlinJump,spr_gremlinWalk,1,objective,-4,atkBox); } 
else target = obj_pie;