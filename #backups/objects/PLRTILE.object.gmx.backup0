// 2020-08-30 16:12:04
#event create
image_speed = 0;
canHurt = true;
hurtAlarm = 1;

tileID = noone;
type = noone;

knockType = noone;
itemDrop = true;

if !isConnected(x,y) then instance_destroy();

#event destroy
if itemDrop == true then scr_dropItem(tileID,1,type,x,y,noone);

//ACTION MUST BE DELAYED A FRAME. ALARM USAGE IS NECESSARY.
scr_updateConnections(x,y);
scr_tileUpdate(x,y);
scr_playerTileUpdate(x,y);
scr_noCollisionTileUpdate(x,y);

#event alarm0|Reset tile
hp = maxHp;

#event alarm1|canHurt reset and hitCheck
canHurt = true;

if hp <= 0 { itemDrop = false; instance_destroy(); }

#event alarm2|GROUND CONNECTION LOGIC

/*Remember past tiles.
Try to go down if possible, then go left or right depending on the tiles. If it can't
do that then go up and continue checking until it can do neither.
If loops onto a past tile then kill itself.
*/

//***** ACTION MUST BE DELAYED A FRAME. ALARM USAGE IS NECESSARY. *****

scr_groundedConnectionCheck();

#event other_user0|Deactivate offscreen
scr_deactivateOffscreen(self);

#event other_user1|Update sprite

var ifRight = position_meeting(x+16,y,TILE_ALL);
var ifLeft = position_meeting(x-16,y,TILE_ALL);
var ifUp = position_meeting(x,y-16,TILE_ALL);
var ifDown = position_meeting(x,y+16,TILE_ALL);



//Check if grass or no.
if !ifUp
{
        //Grass
    if ifDown && (ifRight || ifLeft)
    {
        if ifRight && ifLeft
        {
            image_index = 1; //center
        } else if !ifLeft
        {
            image_index = 0; //left
        } else if !ifRight
        {
            image_index = 2; //right
        }
    } else
    {
        //Floating variants
        if !ifLeft && !ifRight && !ifDown then image_index = 13; // Single
        else if ifRight && ifLeft then image_index = 11; // Center
        else if ifRight then image_index = 10; // Left
        else if ifLeft then image_index = 12; // Right
        else image_index = 14; //Single + ifDown;
    }
    
} else if ifDown && ifUp
{
    //- Center pieces
    if ifRight && ifLeft
    {
        image_index = 4; //center
    } else if !ifLeft && ifRight
    {
        image_index = 3; //left
    } else if !ifRight && ifLeft
    {
        image_index = 5; //right
    } else {image_index = 15;}
} else if ifUp
{
    if ifRight && ifLeft { image_index = 7; }
    else if !ifRight && ifLeft { image_index = 8; }
    else if !ifLeft && ifRight { image_index = 6; }
    else { image_index = 9; }
}


#event other_user15|Heal defense
if hp < maxHp then hp += 1;
if hp >= maxHp then hp = maxHp;

#event draw
draw_self();
if hp != maxHp then draw_sprite(spr_break,(hp/maxHp)*10,x,y);