// 2020-09-19 11:29:49
#event create
state = 0; //Explode outwards.
angle = irandom_range(70,110);
image_speed = 0;
direction = angle;
image_angle = angle;
friction = random_range(0.5,1);
speed = 0;
vsp = 1;
canPickUp = false;
time = 0;
tags = noone;
alarm[0] = room_speed*1; //canPickUp

bobRate = 0.025;
bobAmt = 0;
bobDir = 1; //-1 or 1, dictates whether or not the rate adds or subtracts from the bobAmt.
bobLinearDir = 1; //The true direction of the line. This will be linearlly interpolated to 1 or -1.
bobAltitude = 2;

//scr_deactivateOffscreen(id);

#event destroy
//if tags != noone then ds_list_destroy(tags);

#event alarm0|CanPickUp
canPickUp = true;

#event step
//Gravitate toward player
if distance_to_object(obj_player) <= 20 && canPickUp == true 
{
    var dir = point_direction(x,y,obj_player.x,obj_player.y);
    motion_add(dir,1);
    if image_angle != dir
    { image_angle += lerp(image_angle,dir,0.1); image_angle = clamp(image_angle,0,dir);}
}


//Fall or not fall
switch state
{
    case 0:
    {
        //Angle collision checks
        if place_meeting(lengthdir_x(speed,angle),lengthdir_y(speed,angle),OBSTA)
            {
                speed = 0;
                state = 1;
            }
    
        //Fall to ground.
        if speed == 0 then state = 1;
    }
    break;
    
    case 1:
    {
        //Fall to the ground
        if !place_meeting(x,y+1,OBSTA)
        {
            if vsp < maxGrav then vsp += grav;
            
            if place_meeting(x,y+vsp,OBSTA)
            {
                while !place_meeting(x,y+1,OBSTA)
                { y+=1; }
                
                vsp = 0;
                exit;
            } else if place_meeting(x,y+vsp,obj_platform)
            {
                while !place_meeting(x,y+1,obj_platform)
                { y+=1; }
                
                vsp = 0;
                exit;
            }
            
            y += vsp;
        }
        else
        {
            //Bobbing animation
            bobAmt += bobRate*bobLinearDir;
            
            if bobDir == 1
            { 
                if bobAmt > 1 { bobDir = -1; }
            }
            else
            if bobDir == -1
            { if bobAmt < -1 { bobDir = 1; } }
            
            //bobLienarDirection
            if bobLinearDir != bobDir  { bobLinearDir = lerp(bobLinearDir,bobDir,0.1); }
        }
    }
    break;
}

#event step_end|Instance despawning.
/*
var world_Time = worldControl.world_Time;

if time > world_Time then instance_destroy();

time = world_Time;

###### 
NOTE:
WORLD TIME GETS RESET. THIS CODE GURANTEES ALL ITEM DROPS ARE DESTROYED TRANSITIONING FROM
WAVE TO INTERMISSION.
#####
*/

#event collision:obj_player
if scr_invenAddItem(image_index,amt,type,tags) != -1 
{
    instance_destroy();
    scr_playSound(obj_player.localEmitter,snd_itemPickup,false,10,obj_player.x,obj_player.y);
}
else 
{alarm[0] = room_speed*2; canPickUp = false;}

#event draw
draw_sprite_ext(sprite_index,image_index,x,y+(bobAmt)*bobAltitude,1,1,image_angle,c_white,image_alpha);