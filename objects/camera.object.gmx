<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>followThis = obj_player;
follow_speed = 1;

view_min_zoom = 0.8;
view_zoom=1;
view_max_zoom=1.2;

cloudBkg_xOffset = 0;

globalvar viewWidth, viewHeight;
viewWidth = view_wview[0];
viewHeight = view_hview[0];


//Further fit backgrounds
if room == rm_zero || rm_tutorial
{
    background_xscale[3] = 0.5;
    background_yscale[3] = 0.5;
    background_xscale[2] = 0.3;
    background_yscale[2] = 0.3;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Follow an instance
if instance_exists(followThis)
{
    var fx = followThis.x;
    var fy = followThis.y;
    
    if distance_to_point(fx,fy) &gt; 4
    {
        x += ((fx - x)*follow_speed)*0.5;
        y += ((fy - y)*follow_speed)*0.5;
    } else
    {
        //Otherwise snap to the point!
        x = fx;
        y = fy;
    }
    
    x = round(x);
    y = round(y);
}

//Update view

var zoom_speed = .1;
//view_zoom+=keyboard_check(vk_up)*zoom_speed;
//view_zoom-=keyboard_check(vk_down)*zoom_speed;

view_wview=obj_init.ideal_width/view_zoom;
view_hview=obj_init.ideal_height/view_zoom;

//Center on camera
view_xview=x-view_wview/2-10;
view_yview=y-view_hview/2-10;

//clamp to room
view_xview=clamp(view_xview,0,room_width-view_wview);
view_yview=clamp(view_yview,0,room_height-view_hview);

//GameOver
if instance_exists(gameControl)
{ if gameOver == true then followThis = obj_pie; }



//Parallax Background
//--Smaller the number the slower the background moves

//Need to change this to account for other regions in the future ;p
if room == rm_zero || room == rm_tutorial
{
    cloudBkg_xOffset += 0.05;
    if cloudBkg_xOffset &gt; 319 then cloudBkg_xOffset = 0;
    
    var _dayAlpha = worldControl.dayAlpha/0.6; // dayAlpha/[MAGIC NUMBER]: MN is the maximum dayAlpha value.
    var max_saturation = 80;
    var light_color1 = make_colour_hsv(160,max(0+clamp(world_Time/20-3*65,0,max_saturation),max_saturation-max_saturation*interm),255); //Increase saturation for cool 'nightime' effect.
    var light_color2 = make_colour_hsv(160,max(0+clamp(world_Time/20-3*65,0,max_saturation-10),max_saturation-max_saturation*interm),235);
    
    background_alpha[1] = _dayAlpha; //stars
    
    background_blend[2] = light_color2; //hill
    background_blend[3] = light_color1; //hill close
    
    background_x[1] = view_xview/1.1; //stars
    background_x[2] = view_xview/1.3; //hills
    background_x[3] = view_xview/1.6; //hills close
    background_x[4] = view_xview/2.2; //grass
    
    background_y[2] = (-view_yview/5.15)+80*3; //hill
    background_y[3] = (-view_yview/5.20)+85*2; //hill close
    background_y[4] = (-view_yview/5.25)-52; //foreground feature
} else if room == rm_lobby
{
    //This variable will be used for the stars
    cloudBkg_xOffset += 0.05;
    //if cloudBkg_xOffset &gt; 640 then cloudBkg_xOffset = 0;
    background_x[1] = view_xview/1.15 + cloudBkg_xOffset;
    background_x[2] = view_xview/1.3 + cloudBkg_xOffset;
    background_x[3] = view_xview/1.45 + cloudBkg_xOffset;
    
    background_y[1] = (-view_yview/5) + cloudBkg_xOffset/1.1;
    background_y[2] = (-view_yview/5.15)-64 + cloudBkg_xOffset;
    background_y[3] = (-view_yview/5.25)-64 + cloudBkg_xOffset;
    
    background_vspeed[0] = 0.05;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_zoom -= 0.05;
if hudVisible == true then view_zoom=clamp(view_zoom,view_min_zoom,view_max_zoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_zoom+= 0.05;
if hudVisible == true then view_zoom=clamp(view_zoom,view_min_zoom,view_max_zoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
