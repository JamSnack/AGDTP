<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>PAUSE</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stateLock = false; //Lock the enemy in its current state.
knockType = "LAND";
hForce = 0;
vForce = 0;
hspd = 0;
vsp = 0;
knock_resistance = 0.2;
agility = 0.1;
dropItem = false;
death_gib = spr_gib;
canDespawn = true;

shield_charges_max = 0;
shield_charges = 0;
charge_rate = 0;

deathSound = snd_enemydie_monster;

scale = 1;

//Change some stats for a true boss fight;
if worldControl.raidBossID == id
{
    raid_boss = true;
    maxHp = scr_enemyHpIndex(object_index); //extra 50% hp
    hp = maxHp;
    scale += 0.1;
    image_xscale = scale;
    image_yscale = scale;
} 
else 
{
    raid_boss = false;
    //Gremlin weight should only be factored once :)
    current_grem += spawn_weight;
}

//Prevent spawning inside tiles.
while place_meeting_fast(0,0,OBSTA) y -= 16;

event_inherited();

//---Wave Menu enemy sprites----
//Hud Control information sprites!
if !ds_exists(hudControl.enemySprites,ds_type_list) { hudControl.enemySprites = ds_list_create(); }
var enemySprites = hudControl.enemySprites;

//If the enemy sprite is not apart of our list, then add it.
if ds_list_find_index(enemySprites,object_index) == -1
{
    ds_list_add(enemySprites,object_index);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Audio Emitter
if deathSound != noone &amp;&amp; insideView(x,y) == true 
{
    scr_playSound(deathSound,false,8,x,y,1,true);
    
    //part_particles_create(particle_system,x,y,death_gib,irandom_range(4,8))
    scr_particleCreate("BLOOD",death_gib);
}

//--Remove dead enemies from Wave menu enemy list!
var enemySprites = hudControl.enemySprites;

if ds_exists(enemySprites,ds_type_list) &amp;&amp; instance_number(object_index) == 1
{
    var pos = ds_list_find_index(enemySprites,object_index);
    ds_list_delete(enemySprites,pos);
}

//-- remove weight from current_grem
current_grem -= spawn_weight;
print(string(object_get_name(object_index)+": "+string(spawn_weight)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset CanHurt
canHurt = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var outerBoundary = 5*16; //Slightly larger than the boundary used in activation. (4 tiles).

if insideView(x,y) == false
{
    dropItem = false;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Optimize gremlin
if visible = false then visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit Event
scr_playSound(snd_hit,false,4,x,y,0.8,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if worldControl.raidBossID == id
{
    x = choose(RAIDBOUND_Lower-16,RAIDBOUND_Upper+16); 
    y = (room_height/2)-(16*5);
        
    while place_meeting_fast(0,0,OBSTA) { if y-16 &lt; 0 then break else y-=16; }
}
else instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Raid Leader status
if raid_boss == true
{
    draw_sprite(spr_red_arrow_down,image_index,x,y-sprite_height/2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
