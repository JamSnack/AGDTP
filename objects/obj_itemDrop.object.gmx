<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_itemDrops</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0; //Explode outwards.
angle = irandom_range(70,110);
image_speed = 0;
direction = angle;
image_angle = angle;
friction = random_range(0.5,1);
speed = 0;
vsp = 1;
canPickUp = false;
time = 0;
tags = noone;
alarm[0] = room_speed*1; //canPickUp

bobRate = 0.025;
bobAmt = 0;
bobDir = 1; //-1 or 1, dictates whether or not the rate adds or subtracts from the bobAmt.
bobLinearDir = 1; //The true direction of the line. This will be linearlly interpolated to 1 or -1.
bobAltitude = 2;

//deactivate if the game is loaded.
if instance_exists(obj_player) then scr_deactivateOffscreen(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if tags != noone then ds_list_destroy(tags);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CanPickUp
canPickUp = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instance despawning.
/*
var world_Time = worldControl.world_Time;

if time &gt; world_Time then instance_destroy();

time = world_Time;

###### 
NOTE:
WORLD TIME GETS RESET. THIS CODE GURANTEES ALL ITEM DROPS ARE DESTROYED TRANSITIONING FROM
WAVE TO INTERMISSION.
#####
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravitate toward player
if distance_to_object(obj_player) &lt;= 20 &amp;&amp; canPickUp == true 
{
    var dir = point_direction(x,y,obj_player.x,obj_player.y);
    motion_add(dir,1);
    if image_angle != dir
    { image_angle += lerp(image_angle,dir,0.1); image_angle = clamp(image_angle,0,dir);}
}


//Fall or not fall
switch state
{
    case 0:
    {
        //Angle collision checks
        if place_meeting(lengthdir_x(speed,angle),lengthdir_y(speed,angle),OBSTA)
            {
                speed = 0;
                state = 1;
            }
    
        //Fall to ground.
        if speed == 0 then state = 1;
    }
    break;
    
    case 1:
    {
        //Fall to the ground
        if !place_meeting(x,y+1,OBSTA)
        {
            if vsp &lt; maxGrav then vsp += grav;
            
            if place_meeting(x,y+vsp,OBSTA)
            {
                while !place_meeting(x,y+1,OBSTA)
                { y+=1; }
                
                vsp = 0;
                exit;
            } else if place_meeting(x,y+vsp,obj_platform)
            {
                while !place_meeting(x,y+1,obj_platform)
                { y+=1; }
                
                vsp = 0;
                exit;
            }
            
            y += vsp;
        }
        else
        {
            //Bobbing animation
            bobAmt += bobRate*bobLinearDir;
            
            if bobDir == 1
            { 
                if bobAmt &gt; 1 { bobDir = -1; }
            }
            else
            if bobDir == -1
            { if bobAmt &lt; -1 { bobDir = 1; } }
            
            //bobLienarDirection
            if bobLinearDir != bobDir  { bobLinearDir = lerp(bobLinearDir,bobDir,0.1); }
        }
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scr_invenAddItem(image_index,amt,type,tags) != -1 
{
    instance_destroy();
    scr_playSound(obj_player.localEmitter,snd_itemPickup,false,10,obj_player.x,obj_player.y);
}
else 
{alarm[0] = room_speed*2; canPickUp = false;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y+(bobAmt)*bobAltitude,1,1,image_angle,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
