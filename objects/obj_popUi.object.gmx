<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//script variables
targX = x;
targY = y;
targSizeX = 0;
targSizeY = 0;
sizeX = 0;
sizeY = 0;
targObject = noone;
type = 0;


//Locals
displayContents = false;
destroyRange = 16*2;
destroy = false;
init = false; //bool initialized ui

//Ui buttons
deconstructBaseInit = false; //bool to begin the countdown to base destruction.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset buttons
deconstructBaseInit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate and Other

//Scale and translate the Ui accordingly.

var r = sizeX/targSizeX;
if sizeX == 0 then r = 0.1;

if destroy == false
{
    if sizeX != targSizeX then sizeX = lerp(sizeX,targSizeX,r);
    if sizeY != targSizeY then sizeY = lerp(sizeY,targSizeY,r);
} else if destroy == true
{
   if sizeX &gt; 0 then sizeX -= ceil(sizeX*0.1);
   if sizeY &gt; 0 then sizeY -= ceil(sizeY*0.1);
}

if x != targX then x = lerp(x,targX,r);
if y != targY then y = lerp(y,targY,r);



//Display contents
if displayContents == false &amp;&amp; destroy == false
{
    if sizeX == targSizeX &amp;&amp; sizeY == targSizeY
    {
        displayContents = true;
        init = true;
    }
}



//Delete the Ui
if destroy == false &amp;&amp; init == true
{
    var sX = (sizeX/targSizeX)*sizeX;
    var sY = (sizeY/targSizeY)*sizeY;
    var b1 = x-sX+8;
    var b2 = x+sX;
    var tx = obj_player.x;
    
    if (tx &lt; b1-destroyRange || tx &gt; b2+destroyRange) 
    {
        destroy = true;
        displayContents = false;
    }
}
//- instance_destroy the ui.
if destroy == true &amp;&amp; sizeX &lt;= 0 &amp;&amp; sizeY &lt;= 0 &amp;&amp; init == true then instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ui functionality
if init == true
{
    var sX = (sizeX/targSizeX)*sizeX;
    var sY = (sizeY/targSizeY)*sizeY;
    
    
    //Destroy cases
    if destroy == false
    {
        if !point_in_rectangle(mouse_x,mouse_y,x-sX,y-sY,x+sX,y+sY)
        { destroy = true; displayContents = false; }
    }
    
    //- NO RUNNO EL CODEO :))))))))))))))))))))))
    if destroy == true then exit;
    
    
    //Ui Functionality
    
    //- Destroy Base
    //##Magic Number Explanation: Hitboxes are slightly distorted for some reason. x2 and y2
    // are roughly offset by 8 &lt; x &lt; 9 pixels at this size.##
    if point_in_rectangle(mouse_x,mouse_y,x-18,y-27,x+26,y-1)
    {
        if deconstructBaseInit == true
        {
            scr_deconstructBase();
            destroy = true;
            displayContents = false;
        }
        else if deconstructBaseInit == false
        {
            deconstructBaseInit = true;
            alarm[0] = room_speed*2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sX = (sizeX/targSizeX)*sizeX;
var sY = (sizeY/targSizeY)*sizeY;

//Draw an arrow to calling object.
if targetObject != noone &amp;&amp; displayContents == true
{
    var tx = targetObject.x;
    
    //Boundaries
    var b1 = x-sX;
    var b2 = x+sX;
    
    //Keep the arrow within the Ui.
    if tx &lt; b1+8 then tx = b1+8;
    else if tx &gt; b2 then tx = b2;
    
    draw_sprite_ext(spr_ui_arrow_down,0,tx,y+sY,sizeX/targSizeX,sizeY/targSizeY,0,c_white,1);
}


//Draw the ui background.
draw_nineSliceBox(spr_ui_9slice,x-sX,y-sY,x+sX,y+sY,0);

//Draw UI options
if displayContents == true
{
    switch type
    {
        case "PIE":
        {
            //Draw Pie buttons
            draw_nineSliceBox(spr_ui_button,x-14,y-27,x+14,y-9,deconstructBaseInit);
            if deconstructBaseInit == false
            { draw_text_transformed(x-12.5,y-18,"Deconstruct#    Base",0.6,0.6,0); }
            else
            { draw_text_transformed(x-11,y-18," Are you#  sure?",0.6,0.6,0); }
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
