<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menuLogo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imageRate = 0.001;
image_angle = 0;

imageAccelerationMax = 0.025;
imageAcceleration = imageAccelerationMax;
imageThreshold = 3;

text = "Closed-Alpha 0.2";

playButton_active = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imageAcceleration += imageRate;

if image_angle+imageAcceleration &gt; imageThreshold
{
    imageRate = -1;
} else if image_angle+imageAcceleration  &lt; -imageThreshold then imageRate = 1;

imageAcceleration = clamp(imageAcceleration,-imageAccelerationMax,imageAccelerationMax);

image_angle += imageAcceleration;

//Button recognition
var dx = mouse_x;
var dy = mouse_y;

if playButton_active == false 
{
    if point_in_rectangle(dx,dy,x-60,y+60,x+60,y+120)
    {
      playButton_active = true;  
    } 
    
} else if !point_in_rectangle(dx,dy,x-60,y+60,x+60,y+120) then playButton_active = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Button recognition
var dx = mouse_x;
var dy = mouse_y;

if playButton_active == true &amp;&amp; point_in_rectangle(dx,dy,x-60,y+60,x+60,y+120)
{
    scr_roomTransition("WARP","Loading...",global.fnt_menu,c_white,45/60,rm_lobby);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,image_alpha);
draw_set_font(global.fnt_menu);
draw_set_color(c_yellow);
draw_text(x-120,y+40,text);

//----Play Button-----
var pc,pscale,pangle;

if playButton_active == true 
{
    pc = c_white
    pscale = 4.50;
    pangle = image_angle;
}
else
{
    pc = c_yellow;
    pscale = 4;
    pangle = 0;
}
draw_set_color(pc);
draw_text_transformed(x-12*pscale,y+80,"Play",pscale,pscale,pangle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
