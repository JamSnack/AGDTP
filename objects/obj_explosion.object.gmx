<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_explosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>PAUSE</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init vars
type = "PLAYER";
damage = 10;
radius = 3;

alarm[0] = 2; //Delay event_user(0);

image_speed = 30/60;

scr_playSound(snd_explosion,false,8,x,y,1,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = radius/8;
image_yscale = radius/8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy each tile within the radius.
var xx = x;
var yy = y;
var rad = radius;
var d = damage;
var t = type;

with type //TILE or PLRTILE
{
    if point_distance(x,y,xx,yy) &lt;= rad
    {
        switch t
        {
            case PLRTILE: if canHurt == true { scr_hurt(d,DEF_HURT,false,0); } break;
            case ENEMY: if canHurt == true { scr_hurt(d,DEF_HURT,true,4); } break;
            case TILE:
            {
                if object_index == obj_pie then exit;
                
                //Damage the tile
                hp -= d;
                
                //Check for tile death otherwise heal.
                if hp &lt;= 0 &amp;&amp; level == 0
                {
                    //scr_tileUpdate(x,y);
                    //A DIRECT COPY OF THE LOGIC INSIDE THE USE PICKAXE SCRIPT!
                    //This is the same logic as scr_tileUpdate but includes light_level = 255;
                    for(i=0;i&lt;9;i++)
                    {
                        //Check every adjacent block starting with the top left most block.
                    
                        var column = floor(i/3);
                        var col = collision_point(x-16+(i*16)-(column*16*3),y-16+(16*column),TILE,true,true);
                        
                        if col != noone
                        {
                            with col 
                            {
                                event_user(1);
                                light_level = 255;
                            }
                        }
                    }
                    
                    instance_destroy();
                } 
                else 
                {
                    if hp == 0 then hp = 1;
                    alarm[0] = room_speed*5;
                }
            }
        }
    }
}

//MORE LOGIC
if type != ENEMY &amp;&amp; instance_exists(obj_player) &amp;&amp; point_distance(x,y,obj_player.x,obj_player.y) &lt;= rad &amp;&amp; !collision_line(x,y,obj_player.x,obj_player.y,OBSTA,false,true)
{
    with obj_player { scr_hurt(d,DEF_HURT,true,floor(rad/16)+2); }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw explosions over world objects
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
