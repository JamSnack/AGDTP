<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the game
globalvar canPlace,light,currentTask,elementGoal,waveElement,itemElement,gameOver,region;

canPlace = false; //Whether or not an object can be placed.
removeReady = true; //Can remove a block or not
cellSize = 8; //The size of the building tile selection.
currentTask = 0; //Nothing
elementGoal = 0;
waveElement = 0;
itemElement = 0;
gameOver = false;
region = "GRASSLANDS"; //Region the player is currently visiting.

if dev == true 
{
    show_debug_overlay(true);
}

//Local variables
canExit = false;
//currentTrack = 0; //Overworld theme 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background control
if !instance_exists(obj_player) || hudControl.showBackground == false then exit;

var backgroundAlpha;
var _playerY = obj_player.y;

if _playerY &gt; stoneLayer-(16)
{
    if _playerY &lt; stoneLayer+(16*6) &amp;&amp; _playerY &gt; stoneLayer-(16)
    {
        backgroundAlpha = ((_playerY-stoneLayer-16)/(stoneLayer+(16*6)))*9;
    } else backgroundAlpha = 1;
    
    background_alpha[5] = backgroundAlpha;
    background_visible[5] = true;
    
} else { backgroundAlpha = 0; background_alpha[5] = backgroundAlpha; background_visible[5] = false;}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SAVE GAME
var save_list = ds_list_create(); //Inventory data
var king_list = ds_list_create(); //Region kings defeated
var quest_list = ds_list_create(); //List containing quest progress
var stat_list = ds_list_create(); //List containing player stats to save.
var accessory_list = ds_list_create(); //List containing equipped accessories.


//Save the inventory;
with hudControl
{
    
    for (i=0;i&lt;maxInvenSlots;i++)
    {    
        if inventorySlotIcon[i] != 0
        {
            var _map = ds_map_create();
            ds_list_add(save_list,_map);
            ds_list_mark_as_map(save_list,ds_list_size(save_list)-1);
        
        
            //print('item saved '+string(inventorySlotIcon[i]));
            var icon = inventorySlotIcon[i];
            var type = inventorySlotType[i];
            var amt = inventorySlotAmt[i];
            var slot = i;
            
            //- Package item tags
            var tagList = inventorySlotTags[i];
            
            if ds_exists(tagList, ds_type_list)
            {
                var str = "";
                
                for (k=0;k&lt;ds_list_size(tagList);k++)
                {
                    if is_string(str) &amp;&amp; is_string(tagList[| k])
                    { str = str+tagList[| k]+"$"; }
                    else print("ERROR? TAG LIST: "+string(tagList[| k])+"STR: "+string(str));
                }
                ds_map_add(_map,"tags",str);
            }
            
            
            //- Package item data
            ds_map_add(_map,"icon",icon);
            ds_map_add(_map,"type",type);
            ds_map_add(_map,"amt",amt);
            ds_map_add(_map,"slot",slot);
        }
    }
}

//Save other variables
ds_list_add(king_list,kingDied_1);
ds_list_add(quest_list,mainQuest);
ds_list_add(quest_list,tip_controls);

//Save player stats
ds_list_add(stat_list,energyRegenRate);
ds_list_add(stat_list,energyMax);
ds_list_add(stat_list,tileRegenRate);
ds_list_add(stat_list,tileLevel);

//- Save equipped accessories
if ds_exists(accessories_equipped,ds_type_list)
{
    //Check to see if the accessory has already been equipped
    var list_size = ds_list_size(accessories_equipped);
    
    for(_q=0;_q&lt;list_size;_q++)
    {
        ds_list_add(accessory_list,accessories_equipped[| _q]);
    }
}

//Game maker prefers to start with a ds_map.
//Wrap the root List up in a map!
var _wrapper = ds_map_create();
ds_map_add_list(_wrapper,"INV",save_list);
ds_map_add_list(_wrapper,"KING",king_list);
ds_map_add_list(_wrapper,"QUEST",quest_list);
ds_map_add_list(_wrapper,"STAT",stat_list);
ds_map_add_list(_wrapper,"ACC",accessory_list);

//Save to a string
var str = json_encode(_wrapper);
scr_saveString("agdtpSaveData.sav",str);

//"Nuke the data." ~Shuan Spalding
ds_map_destroy(_wrapper);

print('Game Saved');
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw World Stats
draw_set_color(c_white);
draw_set_font(global.fnt_Ui);

if dev == true
{
    if instance_exists(ENEMY)
    { draw_text(10,25,"Gremlins: "+string(instance_number(GR_ENEMY))+ ' | ' + string(worldControl.maxGrem)); }
} else
{
    if interm == false 
    { draw_text(10,20,"Wave "+string(wave)); }
    else
    {
        draw_text(10,20,"Next Wave: "+string(wave+1)); 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dev == true
{
    draw_line(RAIDBOUND_Lower,room_height,RAIDBOUND_Lower,0);
    draw_line(RAIDBOUND_Upper,room_height,RAIDBOUND_Upper,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="86">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dev == true then with ENEMY instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dev == true then game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if gameOver == true
{
    event_user(0);
    scr_roomTransition("WARP","Warping to: The Place Betwixt Time...",global.fnt_menu,c_white,rm_lobby);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
