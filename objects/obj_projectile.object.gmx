<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize projectile
localGrav = 0;
deadProjectile = false;

//Latent behaviors
bBouncy = false;
canBounce = true;

//- stab - init in script
bStab = false;
armStabComplete = false;
armOffset = 0; //Used for thrusting the arm forward or backward!
armOffsetGoal = 0;
armOffsetRate = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DESPAWN ALARM
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BEHAVIOR STUFF
if canBounce == false then canBounce = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>deadProjectile = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_projectile</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Behaviors
//## NOTE: ENDSTEP B/C GameMaker Gravity affects Y position after the Step event.
//Collisions are more accurate here.

//Type

/*switch type
{
}
*/

//--------Behavior Constants---------------
image_angle = direction;

//--------------Behavior Characteristics---------------------------
var lx = lengthdir_x(speed,direction);
var ly = lengthdir_y(speed,direction);

// - Stab
if bStab == true
{
    //- cute little magic used for simulating 360 degrees of arm movement that isn't actually real ;-;
    var _dir = point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y);
    
    //- prepare _dir for further processing...
    if image_xscale == -1 then _dir = (_dir-180)*-1;
    
    direction = _dir;

    x = obj_player.hitSyncX;
    y = obj_player.hitSyncY;
}


// - Bouncy
if bBouncy == true
{
    if canBounce == true
    {    
        //Bounce the projectile
        
        if instance_exists(OBSTA)
        {
            //X collisions
            if collision_circle(x+hspeed,y,1,OBSTA,false,true)
            { 
                repeat(20)
                { 
                    if !place_meeting(x+sign(hspeed),y,OBSTA)
                    { x+=sign(hspeed); }
                    else break;
                }
                
                hspeed = -hspeed; 
            }
            
            
            //Y collisions
            if collision_circle(x,y+vspeed,1,OBSTA,false,true)
            { 
                repeat(20)
                { 
                    if !place_meeting(x,y+sign(vspeed),OBSTA)
                    { y+=sign(vspeed); }
                    else break;
                }
                
                vspeed = -vspeed;
            }
            
            canBounce = false;
            alarm[1] = 1;
            
            //Despawn soon!
            if alarm[2] == -1 { alarm[2] = room_speed*4; }
        }
    }
}

//Gravity
if localGrav != 0 &amp;&amp; !place_meeting(x,y+1,OBSTA)
{ vspeed += (localGrav); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ENEMY">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.canHurt == true
{ 
    var k = knkAmt;
    var d = dmg;

    //friction += 0.05;
    
    with other 
    {
        var dir = point_direction(x,y,other.x,other.y);
        scr_hurt(d,DEF_HURT,true,k,dir); 
        event_user(0); //register hit event for gremlin
    }
    
    
    //Destroy the projectile
    if type == 1 || type == 2 then instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="OBSTA">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bBouncy == true then exit;

if object_get_name(other.object_index) != "obj_nullLight"
{
    //Kill these types of projectiles:
    if (type == 1 || type == 2) then instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
